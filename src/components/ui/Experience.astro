---
import Button from './Button.astro';
import School from './School.astro';
import Briefcase from './Briefcase.astro';
import SlideInPanel from './SlideInPanel';
import { useState } from 'react';
---

<div class="mb-2 flex flex-row">
	<School class="mr-2 mt-2 size-6 text-black dark:text-white" />
	<h2 class="font-monospace text-3xl font-semibold text-lightgreen">Studies & Experience</h2>
	<Briefcase class="text-black dark:text-white ml-2 mt-2 size-6" />
</div>

<ol class="relative ml-3 border-s border-lightgreen">
	<!-- Studies Section -->
	<li class="mb-10 ms-4">
		<div
			class="absolute -start-1.5 mt-1.5 h-3 w-3 rounded-full border border-lightgreen border-white"
		>
		</div>
		<time class="mb-1 text-sm font-normal leading-none text-lightgreen">2016 - 2018</time>
		<h3 class="font-monospace text-lg font-semibold text-lightgreen">
			Technological Baccalaureate
		</h3>
		<p class="mb-4 text-sm text-black dark:text-white">
			Completed studies in technological fields, focusing on programming and system design.
		</p>
	</li>

	<li class="ms-4">
		<div
			class="bg-gray-200 dark:border-gray-900 dark:bg-gray-700 absolute -start-1.5 mt-1.5 h-3 w-3 rounded-full border border-white"
		>
		</div>
		<time class="mb-1 text-sm font-normal leading-none text-lightgreen">2018 - 2020</time>
		<h3 class="font-monospace text-lg font-semibold text-lightgreen">
			Multiplatform Application Development (DAM)
		</h3>
		<p class="mb-4 text-sm text-black dark:text-white">
			Gained expertise in full-stack development, working with various frameworks and databases.
		</p>
	</li>

	<!-- First experience -->
	<li class="mb-10 ms-4">
		<div
			class="bg-gray-200 dark:border-gray-900 dark:bg-gray-700 absolute -start-1.5 mt-1.5 h-3 w-3 rounded-full border border-white"
		>
		</div>
		<time class="mb-1 text-sm font-normal leading-none text-lightgreen">2020 - 4 months</time>
		<h3 class="font-monospace text-lg font-semibold text-lightgreen">
			Internship Backend Developer
		</h3>
		<p class="mb-4 text-sm text-black dark:text-white">
			Developed a web app for digital signatures using JavaScript, Canvas API, PHP, HTML, and CSS.
		</p>
		<a href="javascript:void(0);" class="font-monospace text-sm" onclick={`togglePanel('panel-1')`}>
			<Button size="lg" style="primary" name="Learn more">Learn more...</Button>
		</a>
	</li>

	<!-- Second experience -->
	<li class="mb-10 ms-4">
		<div
			class="bg-gray-200 dark:border-gray-900 dark:bg-gray-700 absolute -start-1.5 mt-1.5 h-3 w-3 rounded-full border border-white"
		>
		</div>
		<time class="mb-1 text-sm font-normal leading-none text-lightgreen">2024 - 8 months</time>
		<h3 class="font-monospace text-lg font-semibold text-lightgreen">Software Developer</h3>
		<p class="mb-4 text-sm text-black dark:text-white">
			Developed a complete eCommerce solution using Spring Boot and Thymeleaf, with a modular,
			scalable, and secure architecture.
		</p>
		<a href="javascript:void(0);" class="font-monospace text-sm" onclick="togglePanel('panel-2')">
			<Button size="lg" style="primary" name="Learn more">Learn more...</Button>
		</a>

		<path
			stroke="currentColor"
			stroke-linecap="round"
			stroke-linejoin="round"
			stroke-width="2"
			d="M1 5h12m0 0L9 1m4 4L9 9"></path>
	</li>
</ol>
<div class="mb-10 ml-4 mr-16 text-justify text-black dark:text-white">
	<SlideInPanel id="panel-1" title="Internship Backend Developer">
		<div>
			<p>
				I developed a web application for signing documents online using JavaScript, PHP, HTML, and
				CSS. The application featured an interactive canvas implemented with the Canvas API to
				capture digital signatures and store them on the server using PHP.
			</p>

			<p>
				I designed an intuitive and responsive interface, optimizing both the user experience and
				the security of the signing process.
			</p>
		</div>
	</SlideInPanel>

	<SlideInPanel id="panel-2" title="Software Developer">
		<div>
			<p>
				I received extensive training in the fundamentals of software development, starting with
				algorithms and advanced database management, all the way to current frameworks used in
				various projects.
			</p>
			<br />
			<p>
				Development of a generic eCommerce template with Spring Boot and Thymeleaf, implementing a
				modular and scalable architecture, with integrated security and data persistence using MySQL
				as the database. A logging system was added, and use cases for error management were also
				considered. It was dockerized for easier deployment and implemented on AWS, optimizing its
				performance and scalability in the cloud.
			</p>
			<br />
			<p>Room Reservation Management System:</p>
			<br />
			<p>
				Developed a full-stack web application focused on security, user experience, and modern
				deployment practices.
				<br />
				<span>Backend:</span> Django + DRF, exposing a secure RESTful API protected by JWT authentication
				managed through Keycloak as an identity provider (SSO replacement).<br />
				<span>Database:</span> PostgreSQL.
			</p>
			<br />
			<p>
				Integrated automatic confirmation email sending for reservations. Designed a centralized
				logging system and robust error handling. Fully dockerized solution, ensuring
				reproducibility and seamless deployment across all development stages.
			</p>
		</div>
	</SlideInPanel>
</div>

<script>
	let activePanel: HTMLElement | null = null;
	const backToTopButton = document.getElementById('btn-back-to-top');

	function togglePanel(id: string) {
		const panel = document.getElementById(id);
		const button = document.querySelector(`[onclick="togglePanel('${id}')"] Button`);
		if (panel) {
			if (activePanel && activePanel !== panel) {
				activePanel.classList.add('translate-x-full');
				// Cambiar el texto del botón del panel anterior a "Learn more"
				const previousButton = document.querySelector(
					`[onclick="togglePanel('${activePanel.id}')"] Button`
				);
				if (previousButton) {
					previousButton.textContent = 'Learn more...';
				}
			}

			panel.classList.toggle('translate-x-full');
			activePanel = panel.classList.contains('translate-x-full') ? null : panel;

			// Cambiar el texto del botón actual
			if (button) {
				button.textContent = activePanel ? 'Read less' : 'Learn more...';
			}
		}

		if (backToTopButton) {
			if (activePanel) {
				backToTopButton.classList.add('hidden');
			} else {
				backToTopButton.classList.remove('hidden');
			}
		}
	}

	declare global {
		interface Window {
			togglePanel?: (id: string) => void;
		}
	}
	//btn-back-to-top
	window.togglePanel = togglePanel;
</script>
